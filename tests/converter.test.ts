import { numberToText } from "../src";

describe("Unit Tests", () => {
  test.each([
    [-1, "მინუს ერთი"],
    [-65_789, "მინუს სამოცდახუთი ათას შვიდას ოთხმოცდაცხრა"],
    [-1_000_000, "მინუს ერთი მილიონი"],
    [0, "ნული"],
    [1, "ერთი"],
    [2, "ორი"],
    [10, "ათი"],
    [11, "თერთმეტი"],
    [20, "ოცი"],
    [40, "ორმოცი"],
    [60, "სამოცი"],
    [80, "ოთხმოცი"],
    [21, "ოცდაერთი"],
    [22, "ოცდაორი"],
    [30, "ოცდაათი"],
    [31, "ოცდათერთმეტი"],
    [33, "ოცდაცამეტი"],
    [45, "ორმოცდახუთი"],
    [50, "ორმოცდაათი"],
    [55, "ორმოცდათხუთმეტი"],
    [70, "სამოცდაათი"],
    [77, "სამოცდაჩვიდმეტი"],
    [88, "ოთხმოცდარვა"],
    [90, "ოთხმოცდაათი"],
    [100, "ასი"],
    [200, "ორასი"],
    [300, "სამასი"],
    [400, "ოთხასი"],
    [500, "ხუთასი"],
    [600, "ექვსასი"],
    [700, "შვიდასი"],
    [800, "რვაასი"],
    [900, "ცხრაასი"],
    [105, "ას ხუთი"],
    [136, "ას ოცდათექვსმეტი"],
    [299, "ორას ოთხმოცდაცხრამეტი"],
    [786, "შვიდას ოთხმოცდაექვსი"],
    [820, "რვაას ოცი"],
    [1_000, "ერთი ათასი"],
    [1_005, "ერთი ათას ხუთი"],
    [1_455, "ერთი ათას ოთხას ორმოცდათხუთმეტი"],
    [20_000, "ოცი ათასი"],
    [65_789, "სამოცდახუთი ათას შვიდას ოთხმოცდაცხრა"],
    [99_999, "ოთხმოცდაცხრამეტი ათას ცხრაას ოთხმოცდაცხრამეტი"],
    [100_000, "ასი ათასი"],
    [730_510, "შვიდას ოცდაათი ათას ხუთას ათი"],
    [1_000_000, "ერთი მილიონი"],
    [17_512_256, "ჩვიდმეტი მილიონ ხუთას თორმეტი ათას ორას ორმოცდათექვსმეტი"],
    [500_000_000, "ხუთასი მილიონი"],
    [1_000_000_000, "ერთი მილიარდი"],
    [20_050_001_005, "ოცი მილიარდ ორმოცდაათი მილიონ ერთი ათას ხუთი"],
    [1_000_000_000_000, "ერთი ტრილიონი"],
    [5e14, "ხუთასი ტრილიონი"],
    [5e14 + 100, "ხუთასი ტრილიონ ასი"],
    [
      9007199254740991, // Number.MAX_SAFE_INTEGER
      "ცხრა კვადრილიონ " +
        "შვიდი ტრილიონ " +
        "ას ოთხმოცდაცხრამეტი მილიარდ " +
        "ორას ორმოცდათოთხმეტი მილიონ " +
        "შვიდას ორმოცი ათას " +
        "ცხრაას ოთხმოცდათერთმეტი",
    ],
  ])("when the input is %s", (input, expected) => {
    expect(numberToText(input)).toBe(expected);
  });

  test("should fail when the input is not a number", () => {
    expect(() => numberToText("hello")).toThrow("Invalid input");
  });
});
